{"version":3,"sources":["components/AddNote.js","components/note.js","components/noteslist.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["AddNote","handleAddNote","useState","noteText","setNoteText","className","rows","cols","placeholder","value","onChange","event","target","length","onClick","trim","Note","id","text","date","handleDeleteNote","size","NotesList","notes","map","note","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","stroke","fill","viewBox","height","width","xmlns","d","App","nanoid","setNotes","searchText","setSearchText","mode","setMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff9b5cc9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction AddNote({handleAddNote}) {\r\n    const [noteText,setNoteText] =useState('');\r\n    const characterLimit = 200;\r\n\r\n    const handleChange = (event) => {\r\n        if(characterLimit - event.target.value.length >= 0){\r\n            setNoteText(event.target.value);\r\n        }\r\n    };\r\n\r\n    const handleSaveClick = () =>{\r\n        if(noteText.trim().length>0){\r\n            handleAddNote(noteText);\r\n            setNoteText('');\r\n        }\r\n    };\r\n      return (\r\n        <div className='note new'>\r\n            <textarea \r\n                rows='8' \r\n                cols='10' \r\n                placeholder='Type to add a note...'\r\n                value={noteText}\r\n                onChange = {handleChange}\r\n            ></textarea>\r\n            <div className='note-footer'>\r\n                <small>{characterLimit - noteText.length} Remaining</small>\r\n                <button className=\"save\" onClick={handleSaveClick}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNote\r\n","import React from 'react'\r\nimport { MdDeleteForever } from 'react-icons/md';\r\n\r\nfunction Note({id,text,date, handleDeleteNote }) {\r\n    return (\r\n        <div className='note'>\r\n            <span>{text}</span>\r\n            <div className='note-footer'>\r\n                <small>{date}</small>\r\n                <MdDeleteForever \r\n                    onClick={() => handleDeleteNote(id)} \r\n                    className='delete-icon' \r\n                    size='1.3em'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport AddNote from './AddNote'\r\nimport Note from './note'\r\n\r\n\r\nfunction NotesList({ notes, handleAddNote, handleDeleteNote }) {\r\n    return (\r\n        <div className='notes-list'>\r\n            {notes.map((note) => (\r\n                <Note \r\n                    id={note.id}\r\n                    text={note.text}\r\n                    date={note.date}\r\n                    handleDeleteNote = {handleDeleteNote}\r\n                />\r\n            ))}\r\n            <AddNote handleAddNote={handleAddNote}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesList\r\n","import React from 'react'\r\nimport { MdSearch } from 'react-icons/md'\r\n\r\nfunction Search({ handleSearchNote }) {\r\n    return (\r\n        <div className='search'>\r\n            <MdSearch className='search-icons' size='1.3em' />\r\n            <input \r\n                onChange={(event) => handleSearchNote(event.target.value)}\r\n                type='text' \r\n                placeholder='type to search...' \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react';\r\n\r\n\r\nfunction Header({ handleToggleDarkMode }) {\r\n    return (\r\n        <div className='header'>\r\n            <h1>Keep your Notes here</h1>\r\n            <button \r\n                onClick={() => \r\n                    handleToggleDarkMode(\r\n                        (previousDarkMode) => !previousDarkMode\r\n                    )} \r\n                className='toggle-icon' \r\n            >\r\n            {/* <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 24 24\" height=\"2.5em\" width=\"3em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M6.993 12c0 2.761 2.246 5.007 5.007 5.007s5.007-2.246 5.007-5.007S14.761 6.993 12 6.993 6.993 9.239 6.993 12zM12 8.993c1.658 0 3.007 1.349 3.007 3.007S13.658 15.007 12 15.007 8.993 13.658 8.993 12 10.342 8.993 12 8.993zM10.998 19H12.998V22H10.998zM10.998 2H12.998V5H10.998zM1.998 11H4.998V13H1.998zM18.998 11H21.998V13H18.998z\"></path><path transform=\"rotate(-45.017 5.986 18.01)\" d=\"M4.487 17.01H7.487V19.01H4.487z\"></path><path transform=\"rotate(-45.001 18.008 5.99)\" d=\"M16.508 4.99H19.509V6.99H16.508z\"></path><path transform=\"rotate(-134.983 5.988 5.99)\" d=\"M4.487 4.99H7.487V6.99H4.487z\"></path><path transform=\"rotate(134.999 18.008 18.01)\" d=\"M17.008 16.51H19.008V19.511000000000003H17.008z\"></path></svg> */}\r\n            <svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 512 512\" height=\"2.5em\" width=\"3em\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M256 160c-52.9 0-96 43.1-96 96s43.1 96 96 96 96-43.1 96-96-43.1-96-96-96zm246.4 80.5l-94.7-47.3 33.5-100.4c4.5-13.6-8.4-26.5-21.9-21.9l-100.4 33.5-47.4-94.8c-6.4-12.8-24.6-12.8-31 0l-47.3 94.7L92.7 70.8c-13.6-4.5-26.5 8.4-21.9 21.9l33.5 100.4-94.7 47.4c-12.8 6.4-12.8 24.6 0 31l94.7 47.3-33.5 100.5c-4.5 13.6 8.4 26.5 21.9 21.9l100.4-33.5 47.3 94.7c6.4 12.8 24.6 12.8 31 0l47.3-94.7 100.4 33.5c13.6 4.5 26.5-8.4 21.9-21.9l-33.5-100.4 94.7-47.3c13-6.5 13-24.7.2-31.1zm-155.9 106c-49.9 49.9-131.1 49.9-181 0-49.9-49.9-49.9-131.1 0-181 49.9-49.9 131.1-49.9 181 0 49.9 49.9 49.9 131.1 0 181z\"></path></svg>\r\n            </button>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","\nimport { useState,useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport './App.css';\nimport NotesList from './components/noteslist';\nimport Search from './components/Search';\nimport Header from './components/Header'; \n\n\nfunction App() {\n  const [notes,setNotes] =useState([\n    {\n      id:nanoid(),\n      text:'Programming today is a race between software engineers striving to build bigger and better idiot-proof programs, and the Universe trying to produce bigger and better idiots. So far, the Universe is winning.',\n      date:'15/04/2021'\n    },\n    {\n      id:nanoid(),\n      text:'I would love to change the world, but they won’t give me the source code.',\n      date:'13/04/2021'\n    },\n    {\n      id:nanoid(),\n      text:'The glass is neither half-full nor half-empty; it’s twice as big as it needs to be.',\n      date:'11/04/2021'\n    },\n]);\n\nconst [searchText, setSearchText] = useState('');\n\nconst [mode, setMode] = useState('false');\n\n// useEffect(()=>{\n//   const savedTheme = JSON.parse(\n//     localStorage.getItem('react-mode')\n//     );\n\n//     if(savedTheme){\n//       setMode(savedTheme);\n//     }\n// }, []);\n\n// useEffect(() => {\n//   localStorage.setItem('react-mode', \n//   JSON.stringify(mode));\n// }, [mode]);\n\nuseEffect(()=>{\n  const savedNotes = JSON.parse(\n    localStorage.getItem('react-notes-app-data')\n    );\n\n    if(savedNotes){\n      setNotes(savedNotes);\n    }\n}, []);\n\nuseEffect(() => {\n  localStorage.setItem(\n    'react-notes-app-data', \n    JSON.stringify(notes)\n    );\n}, [notes]);\n\nconst addNote = (text) => {\n  const date = new Date();\n  const newNote = {\n    id: nanoid(),\n    text: text,\n    date: date.toLocaleDateString()\n  }\n  const newNotes = [...notes, newNote];\n  setNotes(newNotes);\n  // console.log(text);\n};\n\nconst deleteNote = (id) => {\n  const newNotes = notes.filter((note)=>note.id !== id);\n  setNotes(newNotes);\n;}\n\n  return (\n    <div className={`${mode && 'dark-mode'}`}>\n        <div className=\"container\">\n        <Header handleToggleDarkMode={setMode}/>\n        <Search handleSearchNote={setSearchText}/>\n        <NotesList \n          notes={\n            notes.filter((note) => \n            note.text.toLowerCase().includes(searchText)\n          )}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n        />\n        </div>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}