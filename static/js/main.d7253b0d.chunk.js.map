{"version":3,"sources":["components/AddNote.js","components/note.js","components/noteslist.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["AddNote","handleAddNote","useState","noteText","setNoteText","className","rows","cols","placeholder","value","onChange","event","target","length","onClick","trim","Note","id","text","date","handleDeleteNote","size","NotesList","notes","map","note","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","nanoid","setNotes","searchText","setSearchText","mode","setMode","useEffect","savedTheme","JSON","parse","localStorage","getItem","setItem","stringify","savedNotes","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7253b0d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nfunction AddNote({handleAddNote}) {\r\n    const [noteText,setNoteText] =useState('');\r\n    const characterLimit = 200;\r\n\r\n    const handleChange = (event) => {\r\n        if(characterLimit - event.target.value.length >= 0){\r\n            setNoteText(event.target.value);\r\n        }\r\n    };\r\n\r\n    const handleSaveClick = () =>{\r\n        if(noteText.trim().length>0){\r\n            handleAddNote(noteText);\r\n            setNoteText('');\r\n        }\r\n    };\r\n      return (\r\n        <div className='note new'>\r\n            <textarea \r\n                rows='8' \r\n                cols='10' \r\n                placeholder='Type to add a note...'\r\n                value={noteText}\r\n                onChange = {handleChange}\r\n            ></textarea>\r\n            <div className='note-footer'>\r\n                <small>{characterLimit - noteText.length} Remaining</small>\r\n                <button className=\"save\" onClick={handleSaveClick}>Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNote\r\n","import React from 'react'\r\nimport { MdDeleteForever } from 'react-icons/md';\r\n\r\nfunction Note({id,text,date, handleDeleteNote }) {\r\n    return (\r\n        <div className='note'>\r\n            <span>{text}</span>\r\n            <div className='note-footer'>\r\n                <small>{date}</small>\r\n                <MdDeleteForever \r\n                    onClick={() => handleDeleteNote(id)} \r\n                    className='delete-icon' \r\n                    size='1.3em'/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import React from 'react'\r\nimport AddNote from './AddNote'\r\nimport Note from './note'\r\n\r\n\r\nfunction NotesList({ notes, handleAddNote, handleDeleteNote }) {\r\n    return (\r\n        <div className='notes-list'>\r\n            {notes.map((note) => (\r\n                <Note \r\n                    id={note.id}\r\n                    text={note.text}\r\n                    date={note.date}\r\n                    handleDeleteNote = {handleDeleteNote}\r\n                />\r\n            ))}\r\n            <AddNote handleAddNote={handleAddNote}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesList\r\n","import React from 'react'\r\nimport { MdSearch } from 'react-icons/md'\r\n\r\nfunction Search({ handleSearchNote }) {\r\n    return (\r\n        <div className='search'>\r\n            <MdSearch className='search-icons' size='1.3em' />\r\n            <input \r\n                onChange={(event) => handleSearchNote(event.target.value)}\r\n                type='text' \r\n                placeholder='type to search...' \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\n\r\nfunction Header({ handleToggleDarkMode }) {\r\n    return (\r\n        <div className='header'>\r\n            <h1>Notes</h1>\r\n            <button \r\n                onClick={() => \r\n                    handleToggleDarkMode(\r\n                        (previousDarkMode) => !previousDarkMode\r\n                    )} \r\n                className='save' \r\n            >\r\n                Toggle\r\n            </button>         \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","\nimport { useState,useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport './App.css';\nimport NotesList from './components/noteslist';\nimport Search from './components/Search';\nimport Header from './components/Header'; \n\nfunction App() {\n  const [notes,setNotes] =useState([\n    {\n    id:nanoid(),\n    text:'This is my forst note',\n    date:'15/04/2021'\n    },\n    {\n      id:nanoid(),\n      text:'This is my first note',\n      date:'15/04/2021'\n    },\n    {\n      id:nanoid(),\n      text:'This is my second note',\n      date:'13/04/2021'\n    },\n    {\n      id:nanoid(),\n      text:'This is my third note',\n      date:'11/04/2021'\n    },\n]);\n\nconst [searchText, setSearchText] = useState('');\n\nconst [mode, setMode] = useState('false');\n\nuseEffect(()=>{\n  const savedTheme = JSON.parse(\n    localStorage.getItem('mode')\n    );\n\n    if(savedTheme){\n      setMode(savedTheme);\n    }\n}, []);\n\nuseEffect(() => {\n  localStorage.setItem('mode', JSON.stringify(mode));\n}, [mode]);\n\nuseEffect(()=>{\n  const savedNotes = JSON.parse(\n    localStorage.getItem('react-notes-app-data')\n    );\n\n    if(savedNotes){\n      setNotes(savedNotes);\n    }\n}, []);\n\nuseEffect(() => {\n  localStorage.setItem(\n    'react-notes-app-data', \n    JSON.stringify(notes)\n    );\n}, [notes]);\n\nconst addNote = (text) => {\n  const date = new Date();\n  const newNote = {\n    id: nanoid(),\n    text: text,\n    date: date.toLocaleDateString()\n  }\n  const newNotes = [...notes, newNote];\n  setNotes(newNotes);\n  // console.log(text);\n};\n\nconst deleteNote = (id) => {\n  const newNotes = notes.filter((note)=>note.id !== id);\n  setNotes(newNotes);\n;}\n\n  return (\n    <div className={`${mode && 'dark-mode'}`}>\n        <div className=\"container\">\n        <Header handleToggleDarkMode={setMode}/>\n        <Search handleSearchNote={setSearchText}/>\n        <NotesList \n          notes={\n            notes.filter((note) => \n            note.text.toLowerCase().includes(searchText)\n          )}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n        />\n        </div>\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}